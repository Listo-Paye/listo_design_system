name: Publish to pub.dev & web

env:
  APP_LOCATION: "/" # location of your client code
  APP_ARTIFACT_LOCATION: "widgets_demo/build/web" # location of client code build output
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # secret containing deployment token for your static web app

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  publish:
    permissions:
      id-token: write # Required for authentication using OIDC
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter --version

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Run clean
        run: flutter clean

      - name: Download pub dependencies
        run: flutter pub get

      - name: Download pub dependencies for WidgetBook
        run: |
          cd widgets_demo  
          flutter pub get

#      - name: Run analyzer
#        run: flutter analyze

      - name: Check Publish Warnings
        run: dart pub publish --dry-run

      - name: Publish
        uses: k-paxian/dart-package-publisher@v1.5.1
        with:
          credentialJson: ${{ secrets.CREDENTIAL_JSON }}
          flutter: true
          skipTests: true

      - name: Build Web
        run: |
          cd widgets_demo  
          flutter build web

      - name: Deploy to SWA
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          app_artifact_location: ${{ env.APP_ARTIFACT_LOCATION }}

